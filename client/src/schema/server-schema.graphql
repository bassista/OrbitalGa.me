scalar Date

type Query {
  placeholder: Boolean
  spectateServer: GameModel
}

type Mutation {
  login(loginInput: LoginInput!): LoginResponse!
  loginAnonymous(loginInput: LoginAnonymousInput!): LoginResponse!
  placeholder: Boolean
  register(registerInput: LoginInput!): LoginResponse!
}

union LoginResponse = LoginSuccessResponse | ErrorResponse

type LoginSuccessResponse {
  jwt: String!
  gameModel: GameModel
}

type ErrorResponse {
  error: String!
}

type GameModel {
  serverId: String!
  serverUrl: String!
}

input LoginInput {
  userName: String!
  password: String!
}

input LoginAnonymousInput {
  userName: String!
}
