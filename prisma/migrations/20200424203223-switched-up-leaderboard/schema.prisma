datasource db {
  provider = "postgresql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native"]
}

model User {
  id           Int      @default(autoincrement()) @id
  createdAt    DateTime @default(now())
  anonymous    Boolean
  username     String   @unique
  passwordHash String?
}

model ServerLeaderboardEntry {
  id                 Int              @default(autoincrement()) @id
  createdAt          DateTime         @default(now())
  serverId           Int
  server             Server           @relation(fields: [serverId], references: [id])
  score              Int
  sessionId            String
  userId               Int
  user                 User   @relation(fields: [userId], references: [id])
  aliveTime            Int
  damageGiven          Int
  damageTaken          Int
  enemiesKilled        Int
  eventsParticipatedIn Int
  shotsFired           Int
  }

model GlobalLeaderboardEntry {
  id                 Int              @default(autoincrement()) @id
  createdAt          DateTime         @default(now())
  score              Int
  sessionId            String
  userId               Int
  user                 User   @relation(fields: [userId], references: [id])
  aliveTime            Int
  damageGiven          Int
  damageTaken          Int
  enemiesKilled        Int
  eventsParticipatedIn Int
  shotsFired           Int
}


model Server {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  serverUrl String
  live      Boolean
}

model ServerStat {
  id                 Int      @default(autoincrement()) @id
  createdAt          DateTime @default(now())
  serverId           Int
  server             Server   @relation(fields: [serverId], references: [id])
  tickIndex          Int
  connections        Int
  users              Int
  spectators         Int
  entities           Int
  messages           Int
  duration           Int
  bytesSent          Int
  bytesReceived      Int
  totalBytesSent     Int
  totalBytesReceived Int
  boardWidth         Int
  memHeapUsed        Int
  memHeapTotal       Int
  memExternal        Int
  entityGroupCount   String
}